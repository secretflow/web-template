name: 'CI setup'
description: 'Setup CI environment'

inputs:
  node-version:
    description: 'Node version'
    required: false
    default: '16.20.x'
  python-version:
    description: 'Python version'
    required: false
    default: '3.8.x'
  job-name:
    description: 'Job name. Used to cache Nx results'
    required: false
    default: 'unknown-job'

runs:
  using: 'composite'

  steps:
    - name: Setup PNPM
      uses: pnpm/action-setup@v2
      with:
        version: ^8.6.0
        run_install: false

    - name: Setup Node ${{ inputs.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'pnpm'

    - name: Setup Python ${{ inputs.python-version }}
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        cache: 'pip'
        cache-dependency-path: |
          requirements.lock
          requirements-dev.lock

    - name: Setup Nx cache
      uses: actions/cache@v3
      with:
        path: node_modules/.cache/nx
        # Including SHA in the key causes a cache miss with every commit
        # This is desired because we want cache results to always be updated
        # while we will be using restore-keys to select the closest cache
        key: cache-nx-${{ github.ref }}-${{ runner.os }}-${{ inputs.python-version }}-${{ inputs.node-version }}-${{ inputs.job-name }}-${{ github.sha }}
        restore-keys: |
          cache-nx-${{ github.ref }}-${{ runner.os }}-${{ inputs.python-version }}-${{ inputs.node-version }}-${{ inputs.job-name }}
          cache-nx-${{ github.ref }}-${{ runner.os }}-${{ inputs.python-version }}-${{ inputs.node-version }}
          cache-nx-${{ github.ref }}-${{ runner.os }}-${{ inputs.python-version }}
          cache-nx-${{ github.ref }}-${{ runner.os }}
          cache-nx-${{ github.ref }}

    - name: Setup projects
      shell: bash
      run: pnpm bootstrap
